import { useState, useEffect } from 'react';
import axios from 'axios';
import Home from './components/Home';

function App() {
	const [loading, setLoading] = useState(true);
	const [data, setData] = useState([]);
	const getDB = async () => {
		try {
			const { data } = await axios.get('http://openapi.foodsafetykorea.go.kr/api/08cc9b42270a4439b1b5/COOKRCP01/json/1/100');
			const {
				COOKRCP01: { row },
			} = data;
			const initData = row.map(({ RCP_SEQ, RCP_NM, RCP_WAY2, RCP_PAT2, INFO_WGT, INFO_ENG, INFO_CAR, INFO_PRO, INFO_FAT, INFO_NA, HASH_TAG, ATT_FILE_NO_MAIN, ATT_FILE_NO_MK, RCP_PARTS_DTLS, MANUAL01, MANUAL_IMG01, MANUAL02, MANUAL_IMG02, MANUAL03, MANUAL_IMG03, MANUAL04, MANUAL_IMG04, MANUAL05, MANUAL_IMG05, MANUAL06, MANUAL_IMG06, MANUAL07, MANUAL_IMG07, MANUAL08, MANUAL_IMG08, MANUAL09, MANUAL_IMG09, MANUAL10, MANUAL_IMG10, MANUAL11, MANUAL_IMG11, MANUAL12, MANUAL_IMG12, MANUAL13, MANUAL_IMG13, MANUAL14, MANUAL_IMG14, MANUAL15, MANUAL_IMG15, MANUAL16, MANUAL_IMG16, MANUAL17, MANUAL_IMG17, MANUAL18, MANUAL_IMG18, MANUAL19, MANUAL_IMG19, MANUAL20, MANUAL_IMG20, RCP_NA_TIP }) => ({
				id: RCP_SEQ,
				name: RCP_NM,
				wgt: INFO_WGT,
				ingredient: RCP_PARTS_DTLS,
				nutrition: { eng: INFO_ENG, car: INFO_CAR, pro: INFO_PRO, fat: INFO_FAT, na: INFO_NA },
				category: { way: RCP_WAY2, part: RCP_PAT2, hash: HASH_TAG },
				imgs: { main_s: ATT_FILE_NO_MAIN, main_l: ATT_FILE_NO_MK },
				manual: { desc: [MANUAL01, MANUAL02, MANUAL03, MANUAL04, MANUAL05, MANUAL06, MANUAL07, MANUAL08, MANUAL09, MANUAL10], img: [MANUAL_IMG01, MANUAL_IMG02, MANUAL_IMG03, MANUAL_IMG04, MANUAL_IMG05, MANUAL_IMG06, MANUAL_IMG07, MANUAL_IMG08, MANUAL_IMG09, MANUAL_IMG10] },
			}));
			setLoading(false);
			setData(initData);
		} catch (error) {
			console.error('데이터를 불러오는데 실패했습니다.', error);
		}
	};
	useEffect(() => {
		getDB();
	}, []);
	return (
		<div className='App'>
			{loading ? (
				<h1>로딩중입니다...</h1>
			) : (
				<div className='inner'>
					<Home data={data} />
				</div>
			)}
		</div>
	);
}

export default App;

import { useState, useEffect } from 'react';
import Category from './Category';
import Title from './Title';

const Home = ({ data }) => {
	const [loading, setLoading] = useState(true);
	useEffect(() => {
		if (data) {
			setLoading(false); // 데이터가 있으면 loading을 false.
		}
	}, [data]); // data가 변경될 때마다 이 useEffect 다시 실행.
	if (loading) {
		return false;
	}

	const categories = ['반찬', '국\u0026찌개', '후식', '일품'];
	const filterCategory = categories.map((category) => ({
		category,
		data: data.filter((item) => item.category.part === category).slice(0, 6),
	}));

	return (
		<>
			<Title h1='천만개의 레시피' />
			{filterCategory.map(({ category, data }) => (
				<Category key={category} title={category} data={data} />
			))}
		</>
	);
};

export default Home;
import { useNavigate } from 'react-router-dom';
import Recipe from './Recipe';
import Title from './Title';

const Category = ({ data, title }) => {
	const navigate = useNavigate();
	const btnHandler = () => {
		navigate(`/category/${title}`);
	};
	return (
		<div className='category'>
			<div className='category_title_wrap'>
				<Title h2={title} />
				<button onClick={() => btnHandler(title)}>
					<span className='material-icons-outlined'>more_horiz</span>
				</button>
			</div>
			<article className='category_group'>
				{data.map(({ id, name, imgs: { main_s, main_l }, category: { part } }) => (
					<Recipe key={id} name={name} img_s={main_s} img_l={main_l} cate={part} />
				))}
			</article>
		</div>
	);
};

export default Category;

import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import axios from 'axios';

const CategoryPage = () => {
	const { title } = useParams(); // URL 파라미터로부터 카테고리 제목을 가져옴
	const [filteredData, setFilteredData] = useState([]); // 필터링된 데이터를 저장할 상태

	useEffect(() => {
		const fetchData = async () => {
			try {
				const { data } = await axios.get('http://openapi.foodsafetykorea.go.kr/api/08cc9b42270a4439b1b5/COOKRCP01/json/1/100');
				const {
					COOKRCP01: { row },
				} = data;
				const filtered = row.filter((item) => item.RCP_PAT2 === title);
				console.log(filtered); // 이 위치에서 filtered 변수의 내용을 로그로 출력
				setFilteredData(filtered);
			} catch (error) {
				console.error('데이터를 불러오는데 실패했습니다.', error);
			}
		};
		fetchData();
	}, [title]);

	if (filteredData == null || filteredData == undefined) {
		return false;
	}
	return (
		<div>
			{filteredData.map((item) => (
				<div key={item.RCP_SEQ}>{item.RCP_NM}</div> // 예시로, 각 항목의 이름을 출력
			))}
		</div>
	);
};

export default CategoryPage;

네가 알려준 방법으로 했는데 카테고리페이지에서 데이터를 받지못해
Home 컴포넌트에서
const filterCategory = categories.map((category) => ({
		category,
		data: data.filter((item) => item.category.part === category).slice(0, 6),
		여기에 슬라이스 함수를 적용하지 않은 모든 카테고리 목록을 저장
	}));
	전체 카테고리 목록을 필터링한후 카테고리 페이지로 전달할수는 없어?